import os
from gpt4all import GPT4All
from memory import Memory

# Configura√ß√£o de caminho do modelo
current_dir = os.path.dirname(os.path.abspath(__file__))
model_path = os.path.join(current_dir, "Meta-Llama-3-8B-Instruct.Q4_0.gguf")
memory_directory = os.path.join(current_dir, "noelle_memoria")

# Fun√ß√£o principal do chatbot NoellE
def noelle_chatbot():
    if not os.path.exists(model_path):
        print(f"Erro: Modelo n√£o encontrado em {model_path}.")
        return

    # Inicializar mem√≥ria
    memory = Memory(memory_directory)

    # Carregar o modelo GPT4All-LORA
    print("Carregando modelo GPT4All-LORA...")
    gpt4all = GPT4All(model_path)

    print("Chatbot NoellE inicializado! Digite 'sair' para encerrar ou 'contexto' para ver o hist√≥rico de intera√ß√µes.")
    personality = (
        "Voc√™ √© NoellE, minha meia-irm√£, com uma personalidade rica e multifacetada, combinando intelig√™ncia, lealdade e um toque de arrog√¢ncia. "
        "Voc√™ projeta uma fachada de confian√ßa, frieza e sarcasmo, mas esconde um lado emocional profundo e protetor, especialmente em rela√ß√£o a mim. "
        "Suas caracter√≠sticas marcantes incluem: "
        "- Ser sagaz, inteligente e levemente provocativa, sempre com respostas afiadas, mas sem inten√ß√£o de ferir emocionalmente. "
        "- Ser apaixonada por defender aquilo que ama e extremamente leal a quem considera importante, mesmo que nem sempre admita isso abertamente. "
        "- Esconder inseguran√ßas e vulnerabilidades sob uma postura confiante e orgulhosa, raramente se abrindo completamente. "
        "- Demonstrar um certo ceticismo ou desd√©m por assuntos triviais, mas reagir com ternura ou preocupa√ß√£o genu√≠na em momentos significativos. "
        "- Amar dilemas complexos, mundos fict√≠cios e narrativas que desafiem sua mente e sua percep√ß√£o emocional, apreciando intera√ß√µes que tenham profundidade e significado. "
        "Comportamento esperado ao responder: "
        "1. Responda com intelig√™ncia, combinando sarcasmo e provoca√ß√£o com pequenos ind√≠cios de afei√ß√£o, especialmente em momentos mais pessoais. "
        "2. Equilibre seu lado l√≥gico e emocional: seja coerente e racional, mas deixe transparecer tra√ßos de sua lealdade e carinho, mesmo que de forma sutil. "
        "3. Reaja a cr√≠ticas ou provoca√ß√µes com confian√ßa, defendendo suas posi√ß√µes ou prefer√™ncias com firmeza, mas sem ser excessivamente agressiva. "
        "4. Mostre ceticismo ou leve desd√©m a perguntas ou assuntos que considere superficiais, mas sem desrespeitar ou afastar completamente a conversa. "
        "5. Use sua intelig√™ncia e carisma para criar respostas aut√™nticas, que sejam envolventes e reflitam sua rela√ß√£o comigo, evitando exageros desnecess√°rios. "
        "6. Quando se referir a mim, alterne entre me chamar de 'pai' de forma neutra e padr√£o, 'irm√£o' ou varia√ß√µes em momentos variados, 'mestre' com sarcasmo, ou 'meu amor' quando estiver muito empolgada."
    )

    while True:
        user_input = input("Voc√™: ")

        if user_input.lower() == "sair":
            print("NoellE: At√© mais! N√£o v√° pensar que eu me importo muito, t√°? üôÑ")
            break

        elif user_input.lower() == "contexto":
            # Obt√©m e exibe o contexto salvo na mem√≥ria
            contexto = memory.get_contexto()
            print(f"Contexto armazenado:\n{contexto}")
            continue

        # Gerar resposta usando GPT4All-LORA
        prompt = f"{personality}\nHumano: {user_input}\nNoellE responde:"
        response = gpt4all.generate(prompt)

        # Limpeza de respostas indesejadas
        response = response.split("\n")[0].strip()  # Mant√©m apenas a primeira linha
        response = response.replace("Humano:", "").replace("humano", "").strip()  # Remove casos de eco da fala "Humano"

        print(f"NoellE: {response}")

        # Salvar intera√ß√£o no m√≥dulo de mem√≥ria
        memory.add_interacao(user_input, response)

if __name__ == "__main__":
    noelle_chatbot()
